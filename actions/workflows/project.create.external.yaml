version: 1.0

description: Create External Project Workflow

input:
  - cloud_account

  - project_name
  - project_email
  - project_description
  - admin_user_list
  - stfc_user_list

  - network_name
  - network_description

  - subnet_name
  - subnet_description

  - router_name
  - router_description
  - number_of_floating_ips

vars:
  - project_uuid: null
  - router_uuid: null
  - subnet_uuid: null
  - stdout: null
  - stderr: null

output:
  - stdout: <% ctx().stdout %>
  - stderr: <% ctx().stderr %>

tasks:
  create_internal_project:
    action: stackstorm_openstack.workflow.project.create.internal
      cloud_account=<% ctx().cloud_account %>
      project_name=<% ctx().project_name %>
      project_email=<% ctx().project_email %>
      project_description=<% ctx().project_description %>
      admin_user_list=<% ctx().admin_user_list %>
      stfc_user_list=<% ctx().stfc_user_list %>
      network_name="External"
    next:
      - when: <% succeeded() %>
        publish:
          - project_uuid: <% task(create_internal_project).result.output.project_id %>
          - stdout: <% task(create_internal_project).result.output.project %>
        do:
          - allocate_floating_ips
          - create_network
          - create_router
          - set_default_quota

  allocate_floating_ips:
    action: stackstorm_openstack.floating.ip_addr.create
      cloud_account=<% ctx().cloud_account %>
      network_identifier="External"
      project_identifier=<% ctx().project_uuid %>
      number_to_create=<% ctx().number_of_floating_ips %>

  create_network:
    action: stackstorm_openstack.network.create
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      network_name=<% ctx().network_name %>
      network_description=<% ctx().network_description %>
      provider_network_type="vxlan"
      port_security_enabled=True
      has_external_router=False
    next:
      - when: <% succeeded() %>
        do:
          - create_rbac_policy
          - create_subnet

  create_rbac_policy:
    action: stackstorm_openstack.network.rbac.create
      cloud_account=<% ctx().cloud_account %>
      rbac_action="shared"
      network_identifier="<% ctx().network_name %>"
      project_identifier=<% ctx().project_uuid %>

  create_subnet:
    action: stackstorm_openstack.subnet.create
      cloud_account=<% ctx().cloud_account %>
      subnet_name=<% ctx().subnet_name %>
      subnet_description=<% ctx().subnet_description %>
      network=<% ctx().network_name %>
      dhcp_enabled=True
    next:
      - when: <% succeeded() %>
        publish:
            - subnet_uuid: <% result().result.id %>
        do: router_add_subnet

  create_router:
    action: stackstorm_openstack.router.create
      cloud_account=<% ctx().cloud_account %>
      router_name=<% ctx().router_name %>
      router_description=<% ctx().router_description %>
      project_identifier=<% ctx().project_name %>
      is_distributed=False
      external_gateway="External"
    next:
      - when: <% succeeded() %>
        publish:
          - router_uuid: <% result().result.id %>
        do: router_add_subnet

  router_add_subnet:
    action: stackstorm_openstack.router.add.interface
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_uuid %>
      router_identifier=<% ctx().router_uuid %>
      subnet_identifier=<% ctx().subnet_uuid %>
    join: all

  set_default_quota:
    action: stackstorm_openstack.quota.set
      cloud_account=<% ctx().cloud_account %>
      project_identifier=<% ctx().project_name %>
      num_security_group_rules=200
      num_floating_ips=<% ctx().number_of_floating_ips %>
